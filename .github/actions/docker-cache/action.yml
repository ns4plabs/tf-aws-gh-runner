name: Docker Cache
description: Retrieve docker cache configuration
inputs:
  name:
    description: 'The name of the tag to use for caching docker blobs and manifests'
    required: false
outputs:
  to:
    description: 'The CSV value of the docker build --cache-to parameter'
    value: ${{ fromJSON(steps.cache.outputs.result).to }}
  from:
    description: 'The CSV value of the docker build --cache-from parameter'
    value: ${{ fromJSON(steps.cache.outputs.result).from }}
runs:
  using: composite
  steps:
  - id: cache
    uses: actions/github-script@v6
    env:
      INPUTS_NAME: ${{ inputs.name }}
    with:
      script: |
        # NOTE: created here because buildx instances are per user
        await exec.exec('docker buildx create --driver=docker-container --driver-opt=image=moby/buildkit@sha256:8a45f8c8fcfb0f38e7380d7d9fc728219d2fdf43fd02aee60a2a6723d89abdea --config=/etc/buildkit/buildkitd.toml --name=buildkit')
        await exec.exec('docker buildx use buildkit')
        await exec.exec('docker buildx inspect --bootstrap')

        const callerIdentity = await exec.getExecOutput('aws sts get-caller-identity');
        const arn = JSON.parse(callerIdentity.stdout).Arn;
        const prefix = `${arn.match(/\/(.+)-runner-role\//)[1]}/docker/cache/v0/docker/registry/v2/`;

        const name = process.env.INPUTS_NAME || process.env.GITHUB_REPOSITORY

        return {
          to: `type=s3,mode=max,prefix=${prefix},bucket=tf-aws-gh-runner,region=us-east-1,name=${name}`,
          from: `type=s3,prefix=${prefix},bucket=tf-aws-gh-runner,region=us-east-1,name=${name}`
        }
      result-encoding: json
